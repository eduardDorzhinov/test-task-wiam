module.exports = {
  root: true,
  env: {
    browser: true,
    es2020: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "plugin:react/recommended",
    "plugin:prettier/recommended",
  ],
  ignorePatterns: ["dist", ".eslintrc.cjs", "scripts", "*.test.js"],
  parser: "@typescript-eslint/parser",
  plugins: ["react-refresh", "newline-destructuring"],
  rules: {
    "prettier/prettier": ["off", { endOfLine: "auto", printWidth: 80 }],
    "@typescript-eslint/no-explicit-any": ["off"],
    "react-refresh/only-export-components": [
      "warn",
      { allowConstantExport: true },
    ],
    indent: ["error", 2],
    "no-mixed-spaces-and-tabs": "warn",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
    quotes: ["error", "double"],
    semi: ["error", "always"],
    "max-len": ["error", 120],
    "react/jsx-max-props-per-line": ["error"],
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        args: "all",
        argsIgnorePattern: "^_",
        caughtErrors: "all",
        caughtErrorsIgnorePattern: "^_",
        destructuredArrayIgnorePattern: "^_",
        varsIgnorePattern: "^_",
        ignoreRestSiblings: true,
      },
    ],
    "no-unsafe-optional-chaining": "off",
    "react/jsx-no-target-blank": "off",
    "no-duplicate-imports": ["error", { includeExports: true }],
    "no-inner-declarations": "error",
    camelcase: ["error", { ignoreImports: true }],
    "dot-notation": ["error", { allowPattern: "^[a-z]+(_[a-z]+)+$" }],
    eqeqeq: ["error", "allow-null"],
    "no-console": ["error", { allow: ["warn", "error"] }],
    "no-empty": ["error", { allowEmptyCatch: true }],
    "no-empty-function": "error",
    "no-lonely-if": "error",
    "no-nested-ternary": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "require-await": "error",
    "object-curly-newline": [
      "error",
      {
        ObjectExpression: { multiline: true, minProperties: 2 },
        ObjectPattern: { multiline: true, minProperties: 2 },
      },
    ],
    "object-property-newline": [
      "error",
      {
        allowAllPropertiesOnSameLine: false,
      },
    ],
    "object-curly-spacing": ["error", "always"],
    "newline-destructuring/newline": [
      "error",
      {
        multiline: true,
        items: 1,
      },
    ],
    "react/destructuring-assignment": ["error", "always"],
    "react/jsx-curly-brace-presence": ["error", { props: "never" }],
  },
};
